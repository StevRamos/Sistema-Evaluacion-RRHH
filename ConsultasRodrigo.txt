-- Para insertar un área
DELIMITER $
CREATE PROCEDURE INSERTAR_AREA(
    IN _NOMBRE VARCHAR(100),
    IN _DESCRIPCION VARCHAR(150),
    OUT _ID_AREA INT 
)
BEGIN
	INSERT INTO Areas(nombre,descripcion,activo)
    VALUES (_NOMBRE,_DESCRIPCION,1);
    SET _ID_AREA = @@last_insert_id;
END $

-- Para probar insertar área
CALL INSERTAR_AREA('RECURSOS HUMANOS','ES UNA AREA QUE SE ENCARGA DE LOS EMPLEADOS',@ID_AREA);
select * from Areas;

-- Para actulizar una área
DELIMITER $
CREATE PROCEDURE ACTUALIZAR_AREA(
	IN _ID_AREA INT,
    IN _DESCRIPCION VARCHAR(100)
)
BEGIN
	UPDATE Areas
    SET descripcion = _DESCRIPCION
    WHERE id_Area = _ID_AREA;
END$

-- Para probar actualizar  area
call ACTUALIZAR_AREA(1,'ES UN LUGAR DONDE SE REALIZA ACTIVIDADES PARA LOS EMPLEADOS');
select * from Areas;

-- Para eliminar una área
DELIMITER $
CREATE PROCEDURE ELIMINAR_AREA(
	IN _ID_AREA INT
)
BEGIN
	UPDATE Areas
    SET activo = 0
    WHERE id_Area = _ID_AREA;
END$

-- Para probar eliminar area
call ELIMINAR_AREA(1);

select * from Areas;

-- LISTAR AREAS
DELIMITER $
CREATE PROCEDURE LISTAR_AREAS()
BEGIN
	SELECT *
    FROM Areas
    WHERE activo = 1;
END $

-- Para probar listar areas
call LISTAR_AREAS();


-- PARA INSERTAR CUPOS
DELIMITER $
CREATE PROCEDURE INSERTAR_CUPO(
	IN _ID_AREA INT,
    IN _ID_PERIODO INT,
    IN _ID_ESCALA INT,
    IN NUM_CUPOS INT
)
BEGIN
	INSERT INTO Cupos(id_Escala,id_Periodo,id_Area,num_Cupos,activo)
    VALUES (_ID_ESCALA,_ID_PERIODO,_ID_AREA,NUM_CUPOS,1);
END$

-- para probar insertar cupos
call INSERTAR_CUPO(1,2,3,4);
SELECT * FROM Cupos;

-- PARA ACTUALIZAR CUPO
DELIMITER $
CREATE PROCEDURE ACTUALIZAR_CUPO(
	IN _ID_AREA INT,
    IN _ID_PERIODO INT,
    IN _ID_ESCALA INT,
    in _CANT_CUPOS INT
)
BEGIN
	UPDATE Cupos
    SET	num_Cupos =  _CANT_CUPOS
    WHERE id_Escala = _ID_ESCALA AND id_Periodo = _ID_PERIODO AND id_Area = _ID_AREA;
END$

-- PARA ELIMINAR CUPO
DELIMITER $
CREATE PROCEDURE ELIMINAR_CUPO(
	IN _ID_AREA INT,
    IN _ID_PERIODO INT,
    IN _ID_ESCALA INT
)
BEGIN
	UPDATE Cupos
    SET	activo =  0
    WHERE id_Escala = _ID_ESCALA AND id_Periodo = _ID_PERIODO AND id_Area = _ID_AREA;
END$

-- LISTAR CUPOS
DELIMITER $
CREATE PROCEDURE LISTAR_CUPOS()
BEGIN
	SELECT *
    FROM Cupos
    WHERE activo = 1;
END $

-- PARA PROBAR LISTAR CUPOS
CALL LISTAR_CUPOS();


-- Para insertar un PuestosTrabajo
DELIMITER $
CREATE PROCEDURE INSERTAR_PUESTO_TRABAJO(
	OUT _ID_PUESTO_TRABAJO INT,
    IN _NOMBRE VARCHAR(100),
    IN _DESCRIPCION VARCHAR(150)
)
BEGIN
	INSERT INTO PuestosTrabajo(nombre,descripcion,activo)
    VALUES (_NOMBRE,_DESCRIPCION,1);
    SET _ID_PUESTO_TRABAJO = @@last_insert_id;
END$

-- PRUEBA PARA INSERTAR PUESTO DE TRABAJOS
call INSERTAR_PUESTO_TRABAJO(@ID_PUESTO,"SUPERVISOR DE OBRAS","VERIFICA OBRAS EN CONSTRUCCION");
select * from PuestosTrabajo;

-- PARA ACTUALIZAR UN PUESTO DE TRABAJO
DELIMITER $
CREATE PROCEDURE ACTUALIZAR_PUESTO_TRABAJO(
	IN _ID_PUESTO_TRABAJO INT,
    IN _DESCRIPCION VARCHAR(150)
)
BEGIN
	UPDATE PuestosTrabajo
    SET descripcion=_DESCRIPCION
    WHERE id_PuestosTrabajo = _ID_PUESTO_TRABAJO;
END$
-- PARA PROBAR ACTUALIZAR PUESTO DE TRABAJO
CALL ACTUALIZAR_PUESTO_TRABAJO(1,"SUPERVISA OBRAS EN CONSTRUCCIÓN");
select * from PuestosTrabajo;


-- PARA ELIMINAR UN PUESTO DE TRABAJO
DELIMITER $
CREATE PROCEDURE ELIMINAR_PUESTO_TRABAJO(
	IN _ID_PUESTO_TRABAJO INT
)
BEGIN
	UPDATE PuestosTrabajo
	SET	activo = 0
    WHERE id_PuestosTrabajo = _ID_PUESTO_TRABAJO;
END$

-- PARA POBRAR ELIMINAR PUESTOS DE TRABAJO
CALL ELIMINAR_PUESTO_TRABAJO(1);
select * from PuestosTrabajo;

-- LISTAR PUESTOS DE TRABAJO
DELIMITER $
CREATE PROCEDURE LISTAR_PUESTOS_TRABAJO()
BEGIN
	SELECT *
    FROM PuestosTrabajo
    WHERE activo = 1;
END $

-- PARA PROBAR LISTAR PUESTOS DE TRABAJO
CALL LISTAR_PUESTOS_TRABAJO();

-- PARA INSERTAR UN NUEVO PERIODO
DELIMITER $
CREATE PROCEDURE INSERTAR_PERIODO(
	OUT _ID_PERIODO INT,
    IN _FECHA_INICIO DATE,
    IN _FECHA_FIN DATE,
    IN _PESO_EVAL_OBJ DOUBLE,
    IN _PESO_EVAL_COMP DOUBLE
)
BEGIN
	INSERT INTO Periodos(fechaInicio,fechaFin,pesoEvalObj,pesoEvalComp,activo)
    VALUES(_FECHA_INICIO,_FECHA_FIN,_PESO_EVAL_OBJ,_PESO_EVAL_COMP,1);
    SET _ID_PERIODO =  @@last_insert_id;
END$

-- PARA PROBAR INSERTAR PERIDO
CALL INSERTAR_PERIODO(@ID_PERIODO,'2020-10-03','2021-04-03',0.5,0.5);
SELECT * FROM Periodos;

-- PARA ACTULIZAR UN PERIODO
DELIMITER $
CREATE PROCEDURE ACTULIZAR_PERIODO(
	IN _ID_PERIODO INT,
    IN _NEW_INI DATE,
    IN _NEW_FIN DATE
)
BEGIN
	UPDATE Periodos
    SET	fechaInicio = _NEW_INI, fechaFin = _NEW_FIN 
    WHERE id_Periodo= _ID_PERIODO;
END$

-- PARA PROBAR ACTUALIZAR PERIODO
CALL ACTULIZAR_PERIODO(1,'2020-09-11','2021-05-12');
SELECT * FROM Periodos;

-- ELIMINAR PERIDO
DELIMITER $
CREATE PROCEDURE ELIMINAR_PERIODO(
	IN _ID_PERIODO INT
)
BEGIN
	UPDATE Periodos 
    SET activo = 0
    WHERE id_Periodo = _ID_PERIODO;
END $

-- Para probar eliminar periodo
call ELIMINAR_PERIODO(1);
select * from Periodos;

-- PARA LISTAR PERIODOS
DELIMITER $
CREATE PROCEDURE LISTAR_PERIODO()
BEGIN
	SELECT *
    FROM Periodos
    WHERE activo = 1;
END $

-- Para probar listar periodo
CALL LISTAR_PERIODO();

-- PARA INGRESAR UN NUEVO CRITERIO
-- TIPO :0 (Competencias) y TIPO: 1(Potenciales)
DELIMITER $
CREATE PROCEDURE INSERTAR_CRITERIO(
	OUT _ID_CRITERIO INT,
    IN _NOMBRE VARCHAR(100),
    IN _DESCRIPCION VARCHAR(150),
    IN _TIPO TINYINT
)
BEGIN
	INSERT INTO Criterios(nombre,descripcion,esVigente,tipo)
	VALUES(_NOMBRE,_DESCRIPCION,1,_TIPO);
    SET _ID_CRITERIO = @@last_insert_id;
END $

-- Para probar insertar criterio
call INSERTAR_CRITERIO(@ID_CRITERIO,"LIDERAZGO","LIDERAZGO",0);
call INSERTAR_CRITERIO(@ID_CRITERIO,"PUNTUALIDAD","PUNTUALIDAD",1);
select * from Criterios;

-- ACTUALIZAR CRITERIOS
DELIMITER $
CREATE PROCEDURE ACTUALIZAR_CRITERIO(
	IN _ID_CRITERIO INT,
    IN _DESCRIPCION VARCHAR(150)
)
BEGIN
	UPDATE Criterios
    SET	descripcion = _DESCRIPCION
    WHERE id_Criterio= _ID_CRITERIO;
END $

-- Para probar actualizar criterio
call ACTUALIZAR_CRITERIO(1,"EVALUACION DE LIDERAZGO");
select * from Criterios;

-- ELIMINAR CRITERIO
DELIMITER $
CREATE PROCEDURE ELIMINAR_CRITERIO(
	IN _ID_CRITERIO INT
)
BEGIN
	UPDATE Criterios
    SET esVigente = 0
    WHERE id_Criterio = _ID_CRITERIO;
END $

-- PARA PROBAR ELIMINAR CRITERIOS
CALL ELIMINAR_CRITERIO(1);
SELECT * FROM Criterios

-- PARA LISTAR CRITERIOS

DELIMITER $
CREATE PROCEDURE LISTAR_CRITERIOS()
BEGIN
	SELECT *
    FROM Criterios
    WHERE esVigente = 1;
END $

-- PARA PROBAR LISTAR CRITERIOS
CALL LISTAR_CRITERIOS();

-- PARA INSERTAR ITEMS PDI
DELIMITER $
CREATE PROCEDURE INSERTAR_ITEM_PDI(
	OUT _ID_ITEM INT,
    IN _NOMBRE VARCHAR(50)
)
BEGIN
	INSERT INTO ItemsPDI(nombre,activo)
    VALUES(_NOMBRE,1);
    SET _ID_ITEM = @@last_insert_id;
END $

-- PARA PROBAR INSERTAR ITEMS PDI
CALL INSERTAR_ITEM_PDI(@ID_ITEM,"FORTALEZA");
CALL INSERTAR_ITEM_PDI(@ID_ITEM,"DEBILIDAD");
select * from ItemsPDI;

-- PARA ACTUALIZAR ITEM PDI
DELIMITER $
CREATE PROCEDURE ACTUALIZAR_ITEM_PDI(
	IN _ID_ITEM INT,
    IN _NOMBRE VARCHAR(100)
)
BEGIN
	UPDATE ItemsPDI
	SET nombre = _NOMBRE
    WHERE id_ItemPDI= _ID_ITEM;
END$

-- PARA PROBAR ACTUALIZAR ITEM PDI
CALL ACTUALIZAR_ITEM_PDI(1,"DEBILIDAD");
select * FROM ItemsPDI

-- ELIMINAR ITEM PDI
DELIMITER $
CREATE PROCEDURE ELIMINAR_ITEM_PDI(
	IN _ID_ITEM_PDI INT
)
BEGIN
	UPDATE ItemsPDI
    SET activo=0
    WHERE id_ItemPDI=_ID_ITEM_PDI;
END $

-- PARA PROBAR ELIMINAR ITEM PDI
CALL ELIMINAR_ITEM_PDI(1);
select * from ItemsPDI;

-- PARA INSERTAR UNA NUEVA ESCALA 
DELIMITER $
CREATE PROCEDURE INSERTAR_ESCALA(
	OUT _ID_ESCALA INT,
    IN _NOMBRE VARCHAR(100),
    IN _TIPO TINYINT
)
BEGIN
	INSERT INTO Escalas(nombre,tipo,activo)
    VALUES(_NOMBRE,_TIPO,1);
    SET _ID_ESCALA =  @@last_insert_id;
END $

-- PARA PROBAR ESCALA
CALL INSERTAR_ESCALA(@ID_ESCALA,"A",0);
CALL INSERTAR_ESCALA(@ID_ESCALA,"B",0);
CALL INSERTAR_ESCALA(@ID_ESCALA,"C",0); 
CALL INSERTAR_ESCALA(@ID_ESCALA,"D",0);
CALL INSERTAR_ESCALA(@ID_ESCALA,"E",0);
CALL INSERTAR_ESCALA(@ID_ESCALA,"MEDIO",1);
CALL INSERTAR_ESCALA(@ID_ESCALA,"BAJO",1);
CALL INSERTAR_ESCALA(@ID_ESCALA,"ATO",1);
SELECT * FROM Escalas;


-- ACTUALIZAR ESCALAS
DELIMITER $
CREATE PROCEDURE ACTUALIZAR_ESCALA(
	IN _ID_ESCALA INT,
    IN _NOMBRE VARCHAR(100)
)
BEGIN
	UPDATE Escalas
    SET	nombre = _NOMBRE
    WHERE id_Escala=_ID_ESCALA;
END$

-- PARA PROBAR ACTUALIZAR ESCALA
CALL ACTUALIZAR_ESCALA(20,"MUY ALTO");
select * from Escalas;

-- ELIMINAR ESCALA
DELIMITER $
CREATE PROCEDURE ELIMINAR_ESCALA(
	IN _ID_ESCALA INT
)
BEGIN
	UPDATE Escalas
    SET activo = 0
    WHERE id_Escala= _ID_ESCALA;
END $

-- PARA PROBAR ELIMINAR ESCALA
CALL ELIMINAR_ESCALA(13);

-- LISTAR ESCALAS
DELIMITER $
CREATE PROCEDURE LISTAR_ESCALA()
BEGIN
	SELECT *
    FROM Escalas
    WHERE activo = 1;
END $

-- PARA PRIBAR LISTAR ESCALAS
CALL LISTAR_ESCALA();



-- PARA INSERTAR AREAS_PUESTOS_TRABAJO
DELIMITER $
CREATE PROCEDURE INSERTAR_PUESTO_X_TRABAJO(
	IN _ID_AREA INT,
    IN _ID_PUESTO_TRABAJO INT    
)
BEGIN
	INSERT INTO Areas_PuestosTrabajo(id_Area,id_PuestosTrabajo,activo)
    VALUES (_ID_AREA,_ID_PUESTO_TRABAJO,1);
END $

-- PARA PROBAR UN AREA POR PUESTO DE TRABAJO
CALL INSERTAR_PUESTO_X_TRABAJO(1,1)


-- Para INSERTAR PESO CRITERIOS
DELIMITER $
CREATE PROCEDURE INSERTAR_PESO_CRITERIO(
	OUT _ID_PESO_CRITERIO INT,
    IN _ID_PERIODO INT,
    IN _ID_AREA INT,
    IN _ID_PUESTO_TRABAJO INT,
    IN _ID_CRITERIO INT,
    IN _PESO DOUBLE
)
BEGIN
	INSERT INTO PesosCriterios(id_Area,id_PuestosTrabajo,id_Periodo,id_Criterio,peso,activo)
    VALUES (_ID_AREA,_ID_PUESTO_TRABAJO,_ID_PERIODO,_ID_CRITERIO,_PESO,1);
    SET _ID_PESO_CRITERIO = @@last_insert_id;
END $

-- PARA PROBAR PESOS CRITERIO
CALL INSERTAR_PESO_CRITERIO(@ID_PESO_CRITERIO,1,1,1,1,0.4);
CALL INSERTAR_PESO_CRITERIO(@ID_PESO_CRITERIO,1,1,1,2,0.3);
SELECT * FROM PesosCriterios;

-- PARA INSERTAR LINEA EVALUACION
DELIMITER $
CREATE PROCEDURE INSERTAR_LINEA_EVALUACION(
	OUT _ID_LINEA_EVALUACION INT,
    IN _ID_PESO_CRITERIO INT,
    IN _ID_EVALUACION INT,
    IN _ID_ITEM INT
)
BEGIN
	INSERT INTO LineasEvaluacion(id_Evaluacion,id_PesoCriterio,id_ItemPDI,activo)
    VALUES(_ID_EVALUACION,_ID_PESO_CRITERIO,_ID_ITEM,1);
    SET _ID_LINEA_EVALUACION = @@last_insert_id ;
END $

-- PARA PROBAR INSERTAR LINEA DE EVALUACION
CALL INSERTAR_LINEA_EVALUACION(@ID_LINEA_EVAL,2,1,1);
CALL INSERTAR_LINEA_EVALUACION(@ID_LINEA_EVAL,4,1,1);
SELECT * FROM LineasEvaluacion;

-- PARA ACTUALIZAR LINEA DE EVALUACION
DELIMITER $
CREATE PROCEDURE ACTUALIZAR_LINEA_EVALUACION(
	IN _ID_LINEA_EVALUACION INT,
    IN _NOTA_AUTO DOUBLE,
    IN _NOTA_PREV DOUBLE,
    IN _NOTA_FINAL DOUBLE
)
BEGIN
	IF (_NOTA_AUTO IS NOT NULL) THEN
		UPDATE LineasEvaluacion
        SET notaAutoEval = _NOTA_AUTO
        WHERE id_Evaluacion=_ID_LINEA_EVALUACION;
    END IF;
    
    IF (_NOTA_PREV IS NOT NULL) THEN
		UPDATE LineasEvaluacion
        SET notaPrevia = _NOTA_PREV
        WHERE id_Evaluacion=_ID_LINEA_EVALUACION;
    END IF;
    
    IF (_NOTA_FINAL IS NOT NULL) THEN
		UPDATE LineasEvaluacion
        SET notaFinal = _NOTA_FINAL
        WHERE id_Evaluacion=_ID_LINEA_EVALUACION;
    END IF;
END$

-- PARA PROBAR LA ACTUALIZAR LINEA EVALUACION
CALL ACTUALIZAR_LINEA_EVALUACION(1,15,NULL,NULL);

-- PARA ELIMINAR UNA LINEA DE EVALUACION
DELIMITER $
CREATE PROCEDURE ELIMINAR_LINEA_EVAL(
	IN _ID_LINEA_EVAL INT
)
BEGIN
	UPDATE LineasEvaluacion
    SET	activo=0
    WHERE id_Evaluacion =  _ID_LINEA_EVAL;
END $

-- PARA PROBAR ELIMINAR LINEA DE EVALUACION
CALL ELIMINAR_LINEA_EVAL(1);
select * from LineasEvaluacion;

-- PARA LISTAR LINEA DE EVALUACION
DELIMITER $
CREATE PROCEDURE LISTAR_LINEA_EVAL()
BEGIN
	SELECT *
    FROM LineasEvaluacion
    WHERE activo = 1;
END$

-- PARA PROBAR LISTAR LINEA DE EVALUACION
CALL LISTAR_LINEA_EVAL();


-- PARA INSERTAR SUBCRITERIO
-- TIPO 0:SUBCOMPETENCIAS
-- TIPO 1 : SUBPOTENCIALES
DELIMITER $
CREATE PROCEDURE INSERTAR_SUBCRITERIO(
	OUT _ID_SUBCRITERIO INT,
    IN _ID_CRITERIO INT,
    IN _NOMBRE VARCHAR(100),
    IN _DESCRIPCION VARCHAR(150),
    IN _TIPO TINYINT
)
BEGIN
	INSERT INTO Subcriterios(nombre,descripcion,esVigente,tipo,id_Criterio)
    VALUES (_NOMBRE,_DESCRIPCION,1,_TIPO,_ID_CRITERIO);
    SET _ID_SUBCRITERIO = @@last_insert_id ;
END $

-- PARA PROBAR SUBCRITERIO
CALL INSERTAR_SUBCRITERIO(@ID_SUBCRI,1,"MOTIVA A SU EQUIPO",NULL,0);
CALL INSERTAR_SUBCRITERIO(@ID_SUBCRI,2,"ES PUNTUAL CON SUS ENTREGAS",NULL,1);
SELECT * FROM Subcriterios;

-- INSERTAR PESO SUBCRITERIO
DELIMITER $
CREATE PROCEDURE INSERTAR_PESO_SUBCRITERIO(
	OUT _ID_PESO_SUB INT,
    IN _ID_PERIODO INT,
    IN _ID_AREA INT,
    IN _PUESTO_TRABAJO INT,
    IN _SUBCRITERIO INT,
    IN _PESO DOUBLE
)
BEGIN
	INSERT INTO PesosSubcriterios(id_Periodo,id_Area,id_PuestosTrabajo,id_Subcriterios,peso,activo)
    VALUES (_ID_PERIODO,_ID_AREA,_PUESTO_TRABAJO,_SUBCRITERIO,_PESO,1);
    SET _ID_PESO_SUB = @@last_insert_id;
END $

-- PARA PROBAR PESO SUBCRITERIO
CALL INSERTAR_PESO_SUBCRITERIO(@ID_PESO_SUBCRI,1,1,1,1,0.5);
CALL INSERTAR_PESO_SUBCRITERIO(@ID_PESO_SUBCRI,1,1,1,2,0.5);
SELECT * FROM PesosSubcriterios;